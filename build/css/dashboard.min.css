.dash-wrapper,body,html{height:100%;margin:0}/*! normalize.scss v0.1.0 | MIT License | based on git.io/normalize */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background:0 0}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font:1em monospace,monospace}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}.dash-wrapper{display:grid;grid-template-columns:20.83% 79.77%;grid-template-rows:10% 90%;gap:1px 1px;grid-template-areas:"header header" "sidebar dash-content"}.dash-wrapper h3{font:500 25px "IBM Plex Sans";color:#f5fbff;margin:0}.dash-wrapper-closed{display:grid;grid-template-columns:20.83% 1fr;grid-template-rows:3% 1fr;gap:1px 1px;grid-template-areas:"header header" "sidebar content"}.dash-header{grid-area:header}.sidebar{grid-area:sidebar}.content{grid-area:dash-content}.dash-header{display:grid;grid-template-columns:1fr 1fr;grid-template-rows:100%;gap:1px 1px;grid-template-areas:"dash-header-logo dash-header-user";grid-area:header;padding:23px 120px}.dash-header-logo{grid-area:dash-header-logo}.dash-header-logo img{max-height:61px;height:5vh;width:auto}.dash-header-user{justify-self:end;grid-area:dash-header-user;display:grid;grid-template-columns:1fr 2fr 1fr;grid-template-rows:100%;grid-auto-flow:row;align-items:center}.dash-header-user-icon{background:linear-gradient(50deg,#123273 0,#005c9f 100%);height:76px;width:76px;border-radius:38px}.dash-header-user-icon img{max-width:34px;margin:17px 21px}.dash-header-user-name{margin:0 22px}.dash-header-user-name h2{font:500 28px "IBM Plex Sans";color:#123273}.dash-header-user-arrow img{width:22px;height:11px}.sidebar{background:linear-gradient(19deg,#0b1f48 0,#005c9f 100%);display:grid;grid-template-columns:calc(100% - 50px);grid-template-rows:75px 75px 75px 75px 75px 75px 75px 75px;gap:13px 0;grid-template-areas:"sidebar-burger" "sidebar-dash" "sidebar-investment" "sidebar-team" "sidebar-marketing" "sidebar-history" "sidebar-support" "sidebar-time";grid-area:sidebar;padding-left:25px;padding-right:25px}.sidebar .sidebar-burger{grid-area:sidebar-burger}.sidebar .sidebar-dash{grid-area:sidebar-dash}.sidebar .sidebar-investment{grid-area:sidebar-investment}.sidebar .sidebar-team{grid-area:sidebar-team}.sidebar .sidebar-marketing{grid-area:sidebar-marketing}.sidebar .sidebar-history{grid-area:sidebar-history}.sidebar .sidebar-support{grid-area:sidebar-support}.sidebar .sidebar-time{grid-area:sidebar-time}.sidebar .sidebar-bar{display:grid;grid-template-rows:100%;grid-template-columns:1fr 3fr 1fr;grid-auto-flow:row;align-items:center;padding-left:23px;padding-right:27px;border-radius:15px}.sidebar .sidebar-bar:hover{background:#fff;color:#123273}.sidebar .sidebar-bar:hover h3{color:#123273}.sidebar .sidebar-bar-arrow{justify-self:end}.sidebar .sidebar-bar-selected{background:#fff}.sidebar .sidebar-bar-selected h3{color:#123273}.sidebar-closed{background:linear-gradient(19deg,#0b1f48 0,#005c9f 100%);display:grid;grid-template-columns:calc(100% - 50px);grid-template-rows:75px 75px 75px 75px 75px 75px 75px 75px;gap:13px 0;grid-template-areas:"sidebar-burger" "sidebar-dash" "sidebar-investment" "sidebar-team" "sidebar-marketing" "sidebar-history" "sidebar-support" "sidebar-time";grid-area:sidebar;padding-left:25px;padding-right:25px}.sidebar-closed .sidebar-burger{grid-area:sidebar-burger}.sidebar-closed .sidebar-dash{grid-area:sidebar-dash}.sidebar-closed .sidebar-investment{grid-area:sidebar-investment}.sidebar-closed .sidebar-team{grid-area:sidebar-team}.sidebar-closed .sidebar-marketing{grid-area:sidebar-marketing}.sidebar-closed .sidebar-history{grid-area:sidebar-history}.sidebar-closed .sidebar-support{grid-area:sidebar-support}.sidebar-closed .sidebar-time{grid-area:sidebar-time}.sidebar-closed .sidebar-bar{display:grid;grid-template-rows:100%;grid-template-columns:1fr;grid-auto-flow:row;align-items:center;padding-left:23px;padding-right:27px;border-radius:15px}.sidebar-closed .sidebar-bar:hover{background:#fff}.sidebar-closed .sidebar-bar-selected{background:#fff}.content{background:#f5fbff;display:grid;grid-template-columns:100%;grid-template-rows:-webkit-min-content -webkit-min-content -webkit-min-content -webkit-min-content;grid-template-rows:min-content min-content min-content min-content;gap:60px 0;grid-template-areas:"content-balance" "content-earnings" "content-links" "content-newslog"}.content-balance{display:grid;grid-template-columns:17.1% 6.18% 17.1% 6.18% 17.1%;grid-template-rows:33px 260px;gap:25px 30px;grid-template-areas:"btc-header btc-dol dol-header dol-coin coin-header" "btc-square btc-dol dol-square dol-coin coin-square";grid-area:content-balance}.content-balance-btc-header{grid-area:btc-header}.content-balance-btc-square{grid-area:btc-square}.content-balance-btc-dol{grid-area:btc-dol}.content-balance-dol-header{grid-area:dol-header}.content-balance-dol-square{grid-area:dol-square}.content-balance-dol-coin{grid-area:dol-coin}.content-balance-coin-header{grid-area:dol-header}.content-balance-coin-square{grid-area:dol-square}.content-earnings{display:grid;grid-template-columns:1fr 1fr 1fr 1fr;grid-template-rows:158px 158px;gap:40px 16px;grid-template-areas:"content-earnings-total-invmemb content-earnings-profteam content-earnings-totalprof content-earnings-graph" ". . . .";grid-area:content-earnings}.content-earnings-total-invmemb{grid-area:content-earnings-total-invmemb}.content-earnings-profteam{grid-area:content-earnings-profteam}.content-earnings-totalprof{grid-area:content-earnings-totalprof}.content-earnings-graph{grid-area:content-earnings-graph}.content-links{display:grid;grid-template-columns:1fr 1fr 1fr 1fr 1fr 1fr;grid-template-rows:70px 70px;gap:38px 1px;grid-template-areas:"refbyid refbyid refbyid refbyusername refbyusername refbyusername" "presentation-link presentation-link image-video-link image-video-link tutorial-link tutorial-link";grid-area:content-links}.content-links .refbyid{grid-area:refbyid}.content-links .refbyusername{grid-area:refbyusername}.content-links .presentation-link{grid-area:presentation-link}.content-links .image-video-link{grid-area:image-video-link}.content-links .tutorial-link{grid-area:tutorial-link}.content-newslog{display:grid;grid-template-columns:1fr 1fr;grid-template-rows:623px;gap:0 16px;grid-template-areas:"content-newslog-news content-newslog-loginhistory";grid-area:content-newslog}.content-newslog-news{grid-area:content-newslog-news}.content-newslog-loginhistory{grid-area:content-newslog-loginhistory}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
