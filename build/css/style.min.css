@charset "UTF-8";header{background:linear-gradient(61deg,#001029 4%,#235fc8 98%);opacity:1}.homescreen .wrapper{background:url(../img/waveimage.png) 248.9px -120px no-repeat,linear-gradient(61deg,#001029 4%,#235fc8 98%) left top no-repeat padding-box}.header-grid-container{background:#fff}@media (max-width:767.98px){.comingsoon{width:100vw}.comingsoon .wrapper{border-bottom-left-radius:73.7px;border:none;height:100vh;background:url(../img/waveimage.png) 40% 10%/auto 80% no-repeat,linear-gradient(61deg,#001029 4%,#235fc8 98%) left top/100% 100%}.comingsoon .wrapper .comingsoon-grid-container{display:grid;height:100%;margin:0;justify-items:center;grid-template-columns:1fr;grid-template-rows:25% 30% 8% 25%;gap:0 0;grid-template-areas:"comingsoon-logobox" "comingsoon-h1-box" "comingsoon-h2-box" "comingsoon-form-box"}.comingsoon .wrapper .comingsoon-logobox{grid-area:comingsoon-logobox;align-self:end}.comingsoon .wrapper .comingsoon-logobox img{width:70vw}.comingsoon .wrapper .comingsoon-h1-box{justify-self:center;grid-area:comingsoon-h1-box;align-self:end}.comingsoon .wrapper .comingsoon-h1-box h1{width:75vw;margin:0;font-family:IBMPlexSans;font-size:20px;font-size:40px;font-weight:500;font-stretch:normal;font-style:normal;line-height:1.3;letter-spacing:normal;text-align:center;color:#fff}.comingsoon .wrapper .comingsoon-h2-box{grid-area:comingsoon-h2-box}.comingsoon .wrapper .comingsoon-h2-box h2{margin:0;width:72vw;font-family:IBMPlexSans;font-size:20px;font-weight:300;font-stretch:normal;font-style:normal;line-height:1.35;letter-spacing:normal;text-align:center;color:#fff}.comingsoon .wrapper .comingsoon-form-box{grid-area:comingsoon-form-box;align-items:center;justify-items:center;width:80.5vw;height:100%;display:grid;grid-template-columns:1fr;grid-auto-rows:50%}.comingsoon .wrapper .comingsoon-form-box .commingsoon-input-text{min-width:312px;background:0 0;height:38px;font-family:IBMPlexSans;font-size:20px;font-weight:500;font-stretch:normal;font-style:normal;line-height:1.32;letter-spacing:normal;text-align:center;color:#fff;padding:0 0 10.5px 0;border-width:0 0 2px 0;border-bottom-color:#fff}.comingsoon .wrapper .comingsoon-form-box .commingsoon-input-text ::-webkit-input-placeholder{color:#fff;opacity:.5}.comingsoon .wrapper .comingsoon-form-box .commingsoon-input-text ::-moz-placeholder{color:#fff;opacity:.5}.comingsoon .wrapper .comingsoon-form-box .commingsoon-input-text :-ms-input-placeholder{color:#fff;opacity:.5}.comingsoon .wrapper .comingsoon-form-box .commingsoon-input-text ::-ms-input-placeholder{color:#fff;opacity:.5}.comingsoon .wrapper .comingsoon-form-box .commingsoon-input-text ::placeholder{color:#fff;opacity:.5}.comingsoon .wrapper .comingsoon-form-box .commingsoon-input-text ::-webkit-input-placeholder{color:#fff;opacity:.5}.comingsoon .wrapper .comingsoon-form-box .comingsoon-input-button{width:220px;height:60px;border-radius:30px;border-width:0;background-color:#ed7102;font-family:IBMPlexSans;font-size:25px;font-weight:500;font-stretch:normal;font-style:normal;line-height:1.32;letter-spacing:normal;text-align:center;color:#fff;margin-top:36.5px}.comingsoon .wrapper .grid-container *{border:1px solid red;position:relative}}@media (min-width:767.98px){.comingsoon{width:100%}.comingsoon .wrapper{border-bottom-left-radius:143px;border:none;height:100vh;background:url(../img/waveimage.png) 10.9vw -60px/78.2vw auto no-repeat,linear-gradient(61deg,#001029 4%,#235fc8 98%) left top no-repeat;background-clip:padding-box}.comingsoon .wrapper .comingsoon-grid-container{display:grid;height:100%;margin:0;justify-items:center;grid-template-columns:1fr;grid-template-rows:33.9% 20.8% 3.1% 13.9%;gap:0 0;grid-template-areas:"comingsoon-logobox" "comingsoon-h1-box" "comingsoon-h2-box" "comingsoon-form-box"}.comingsoon .wrapper .comingsoon-logobox{grid-area:comingsoon-logobox;align-self:end}.comingsoon .wrapper .comingsoon-h1-box{justify-self:center;grid-area:comingsoon-h1-box;align-self:end}.comingsoon .wrapper .comingsoon-h1-box h1{margin:0;font-family:IBMPlexSans;font-size:60px;font-weight:600;font-stretch:normal;font-style:normal;line-height:1.32;letter-spacing:normal;text-align:center;color:#fff}.comingsoon .wrapper .comingsoon-h2-box{grid-area:comingsoon-h2-box}.comingsoon .wrapper .comingsoon-h2-box h2{margin:0;font-family:IBMPlexSans;font-size:25px;font-weight:400;font-stretch:normal;font-style:normal;line-height:1.32;letter-spacing:normal;text-align:center;color:#fff}.comingsoon .wrapper .comingsoon-form-box{grid-area:comingsoon-form-box;align-self:center}.comingsoon .wrapper .comingsoon-form-box .commingsoon-input-text{min-width:312px;background:0 0;height:38px;font-family:IBMPlexSans;font-size:25px;font-weight:500;font-stretch:normal;font-style:normal;line-height:1.32;letter-spacing:normal;text-align:left;color:#fff;padding:0 0 10.5px 0;border-width:0 0 2px 0;border-bottom-color:#fff}.comingsoon .wrapper .comingsoon-form-box .commingsoon-input-text ::-webkit-input-placeholder{color:#fff;opacity:.5}.comingsoon .wrapper .comingsoon-form-box .commingsoon-input-text ::-moz-placeholder{color:#fff;opacity:.5}.comingsoon .wrapper .comingsoon-form-box .commingsoon-input-text :-ms-input-placeholder{color:#fff;opacity:.5}.comingsoon .wrapper .comingsoon-form-box .commingsoon-input-text ::-ms-input-placeholder{color:#fff;opacity:.5}.comingsoon .wrapper .comingsoon-form-box .commingsoon-input-text ::placeholder{color:#fff;opacity:.5}.comingsoon .wrapper .comingsoon-form-box .commingsoon-input-text ::-webkit-input-placeholder{color:#fff;opacity:.5}.comingsoon .wrapper .comingsoon-form-box .comingsoon-input-button{width:220px;height:60px;border-radius:30px;border-width:0;background-color:#ed7102;font-family:IBMPlexSans;font-size:25px;font-weight:500;font-stretch:normal;font-style:normal;line-height:1.32;letter-spacing:normal;text-align:center;color:#fff;margin-left:43.5px}.comingsoon .wrapper .grid-container *{border:1px solid red;position:relative}}/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font:1em monospace,monospace}a{background:0 0}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font:1em monospace,monospace}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font:100%/1.15 inherit;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}*,::after,::before{box-sizing:inherit}html{box-sizing:border-box}body{margin:0}@media (min-width:992px){.header-grid-container{padding-left:140px;padding-right:96px}section .wrapper{width:100%;padding-left:140px;padding-right:96px}}img{max-width:100%}a{text-decoration:none}header{width:100%;height:120px}.header-grid-container{background:#fff;margin:0;border-bottom-right-radius:60px;border:none}.header-grid-container{display:grid;grid-template-columns:minmax(200px,1fr) 1fr;grid-template-rows:120px;gap:0 0;grid-template-areas:"top-logo-box top-nav-box"}.top-logo-box{grid-area:top-logo-box;align-self:center}.top-logo-box .Logo{width:197.2px;height:60px;-o-object-fit:contain;object-fit:contain}.top-nav-box{display:grid;grid-template-columns:repeat(4,minmax(134px,1fr)) minmax(220px,2fr);grid-template-rows:1fr;gap:1px 1px;grid-template-areas:"nav-about nav-team nav-blog nav-login nav-signup";grid-area:top-nav-box;justify-items:center;align-items:center}.nav-signup{grid-area:nav-signup}.nav-about{grid-area:nav-about}.nav-team{grid-area:nav-team}.nav-blog{grid-area:nav-blog}.nav-login{grid-area:nav-login}.nav-bar a{font:normal 500 28px/1.32 IBMPlexSans;font-stretch:normal;letter-spacing:normal;text-align:center;color:#005c9f}.nav-signup .button-signup{width:200px;height:60px;padding:13px 42px 13px 43px;font-size:28px;font-weight:500;line-height:1.32;border-radius:30px;border:solid 3px #ed7102}.nav-signup .button-main-inversed{background:#fff;font-family:IBMPlexSans;text-align:center;color:#ed7102}.homescreen{width:100%;margin-top:-120px;padding-top:120px}.homescreen .wrapper{height:100vh;border-bottom-left-radius:143px;border:none}.homescreen .wrapper .homescreen-grid-container{display:grid;height:100%;grid-template-columns:1fr;grid-template-rows:29.4% -webkit-min-content minmax(20px,14.4%) 60px 32.2%;grid-template-rows:29.4% min-content minmax(20px,14.4%) 60px 32.2%;gap:1px 0;grid-template-areas:"gap1" "homescreen-header" "gap2" "homescreen-button" "gap3"}.homescreen .wrapper .homescreen-button{grid-area:homescreen-button}.homescreen .wrapper .homescreen-header{grid-area:homescreen-header}.homescreen .wrapper h1{font:normal 500 60px/1.32 'IBM Plex Sans',sans-serif;font-stretch:normal;letter-spacing:normal;text-align:left;color:#fff;margin:0}.homescreen .wrapper .button-main{background:#ed7102;width:240px;height:60px;border-radius:30px}.homescreen .wrapper .button-getstarted{font:normal 500 25px/1.32 IBMPlexSans;font-stretch:normal;letter-spacing:normal;text-align:center;color:#fff;padding:13px 31px 13px 31px}.footer{border:1px solid red}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
