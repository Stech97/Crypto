@charset "UTF-8";/*! normalize.scss v0.1.0 | MIT License | based on git.io/normalize */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background:0 0}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font:1em monospace,monospace}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}@media (max-width:767.98px){.comingsoon{width:100%}.comingsoon-wrapper{border-bottom-left-radius:73.7px;border:none;height:100vh;background:url(../img/waveimage.png) center 10%/auto 80% no-repeat,linear-gradient(61deg,#001029 4%,#235fc8 98%) left top/100% 100%}.comingsoon-wrapper .comingsoon-grid-container{display:grid;height:100%;margin:0;justify-items:center;grid-template-columns:1fr;grid-template-rows:25% 30% 8% 25%;gap:0 0;grid-template-areas:"comingsoon-logobox" "comingsoon-h1-box" "comingsoon-h2-box" "comingsoon-form-box"}.comingsoon-wrapper .comingsoon-logobox{grid-area:comingsoon-logobox;align-self:end}.comingsoon-wrapper .comingsoon-logobox img{width:70%}.comingsoon-wrapper .comingsoon-h1-box{justify-self:center;grid-area:comingsoon-h1-box;align-self:end}.comingsoon-wrapper .comingsoon-h1-box h1{width:75%;margin:0;font-family:"IBM Plex Sans";font-size:20px;font-size:40px;font-weight:500;font-stretch:normal;font-style:normal;line-height:1.3;letter-spacing:normal;text-align:center;color:#fff}.comingsoon-wrapper .comingsoon-h2-box{grid-area:comingsoon-h2-box}.comingsoon-wrapper .comingsoon-h2-box h2{margin:0;width:72%;font-family:"IBM Plex Sans";font-size:20px;font-weight:300;font-stretch:normal;font-style:normal;line-height:1.35;letter-spacing:normal;text-align:center;color:#fff}.comingsoon-wrapper .comingsoon-form-box{grid-area:comingsoon-form-box;align-items:center;justify-items:center;width:80.5%;height:100%;display:grid;grid-template-columns:1fr;grid-auto-rows:50%}.comingsoon-wrapper .comingsoon-form-box .commingsoon-input-text{min-width:312px;background:0 0;height:38px;font-family:"IBM Plex Sans";font-size:20px;font-weight:500;font-stretch:normal;font-style:normal;line-height:1.32;letter-spacing:normal;text-align:center;color:#fff;padding:0 0 10.5px 0;border-width:0 0 2px 0;border-bottom-color:#fff}.comingsoon-wrapper .comingsoon-form-box .commingsoon-input-text ::-webkit-input-placeholder{color:#fff;opacity:.5}.comingsoon-wrapper .comingsoon-form-box .commingsoon-input-text ::-moz-placeholder{color:#fff;opacity:.5}.comingsoon-wrapper .comingsoon-form-box .commingsoon-input-text :-ms-input-placeholder{color:#fff;opacity:.5}.comingsoon-wrapper .comingsoon-form-box .commingsoon-input-text ::-ms-input-placeholder{color:#fff;opacity:.5}.comingsoon-wrapper .comingsoon-form-box .commingsoon-input-text ::placeholder{color:#fff;opacity:.5}.comingsoon-wrapper .comingsoon-form-box .commingsoon-input-text ::-webkit-input-placeholder{color:#fff;opacity:.5}.comingsoon-wrapper .comingsoon-form-box .comingsoon-input-button{width:220px;height:60px;border-radius:30px;border-width:0;background-color:#ed7102;font-family:"IBM Plex Sans";font-size:25px;font-weight:500;font-stretch:normal;font-style:normal;line-height:1.32;letter-spacing:normal;text-align:center;color:#fff;margin-top:36.5px}}@media (min-width:767.98px){.comingsoon{width:100%}.comingsoon-wrapper{border-bottom-left-radius:150px;border:none;height:100vh;background:url(../img/waveimage.png) center -60px/78.2% auto no-repeat,linear-gradient(61deg,#001029 4%,#235fc8 98%) left top no-repeat;background-clip:padding-box}.comingsoon-wrapper .comingsoon-grid-container{display:grid;height:100%;margin:0;justify-items:center;grid-template-columns:1fr;grid-template-rows:33.9% 20.8% 3.1% auto;gap:0 0;grid-template-areas:"comingsoon-logobox" "comingsoon-h1-box" "comingsoon-h2-box" "comingsoon-form-box"}.comingsoon-wrapper .comingsoon-logobox{grid-area:comingsoon-logobox;align-self:end}.comingsoon-wrapper .comingsoon-h1-box{justify-self:center;grid-area:comingsoon-h1-box;align-self:end}.comingsoon-wrapper .comingsoon-h1-box h1{margin:0;font-family:"IBM Plex Sans";font-size:60px;font-weight:600;font-stretch:normal;font-style:normal;line-height:1.32;letter-spacing:normal;text-align:center;color:#fff}.comingsoon-wrapper .comingsoon-h2-box{grid-area:comingsoon-h2-box}.comingsoon-wrapper .comingsoon-h2-box h2{margin:0;font-family:"IBM Plex Sans";font-size:25px;font-weight:400;font-stretch:normal;font-style:normal;line-height:1.32;letter-spacing:normal;text-align:center;color:#fff}.comingsoon-wrapper .comingsoon-form-box{grid-area:comingsoon-form-box;align-self:center}.comingsoon-wrapper .comingsoon-form-box .commingsoon-input-text{min-width:400px;background:0 0;height:38px;font-family:"IBM Plex Sans";font-size:25px;font-weight:500;font-stretch:normal;font-style:normal;line-height:1.32;letter-spacing:normal;text-align:left;color:#fff;padding:0 0 10.5px 0;border-width:0 0 2px 0;border-bottom-color:#fff}.comingsoon-wrapper .comingsoon-form-box .commingsoon-input-text ::-webkit-input-placeholder{color:#fff;opacity:.5}.comingsoon-wrapper .comingsoon-form-box .commingsoon-input-text ::-moz-placeholder{color:#fff;opacity:.5}.comingsoon-wrapper .comingsoon-form-box .commingsoon-input-text :-ms-input-placeholder{color:#fff;opacity:.5}.comingsoon-wrapper .comingsoon-form-box .commingsoon-input-text ::-ms-input-placeholder{color:#fff;opacity:.5}.comingsoon-wrapper .comingsoon-form-box .commingsoon-input-text ::placeholder{color:#fff;opacity:.5}.comingsoon-wrapper .comingsoon-form-box .commingsoon-input-text ::-webkit-input-placeholder{color:#fff;opacity:.5}.comingsoon-wrapper .comingsoon-form-box .comingsoon-input-button{width:220px;height:60px;border-radius:30px;border-width:0;background-color:#ed7102;font-family:"" IBM Plex Sans "";font-size:25px;font-weight:500;font-stretch:normal;font-style:normal;line-height:1.32;letter-spacing:normal;text-align:center;color:#fff;margin-left:43.5px}.comingsoon-wrapper .comingsoon-thanks-box{grid-area:comingsoon-form-box;align-self:center}.comingsoon-wrapper .comingsoon-thanks-box p{color:#fff;font-family:"IBM Plex Sans";font-size:25px;font-weight:300}}.none{display:none}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
